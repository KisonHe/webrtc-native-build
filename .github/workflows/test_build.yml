# This is a basic workflow to help you get started with Actions

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: test_build

on:
  workflow_dispatch:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        architecture: [arm64, amd64]
        build-type: [Release, Debug]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        
    - name: Generate Version Output
      id: generate_version_output
      run: echo "::set-output name=version::$(cat VERSION)"
      shell: bash
        
    - name: Print Version Information
      run: echo "Version ${{ steps.generate_version_output.outputs.version }}"
      shell: bash
             
    - name: Generate Release File Name
      id: generate_release_file_name
      run: |
        echo "::set-output name=release_file_name::webrtc-native-build-${{ matrix.os }}-\
        ${{ matrix.architecture }}-\
        ${{ matrix.build-type }}-\
        ${{ steps.generate_version_output.outputs.version }}"
          
    - name: Print Release File Name
      run: echo "Release File Name ${{ steps.generate_release_file_name.outputs.release_file_name }}"
      shell: bash
        
    - name: Install system dependencies
      run: | 
        sudo apt-get install ninja-build cmake build-essential libssl-dev libboost-all-dev 
        sudo apt-get install libglib2.0-dev libgtk-3-dev libpulse-dev libasound2-dev 
        sudo apt-get install g++-aarch64-linux-gnu gcc-aarch64-linux-gnu
  
    - name: Create build directory
      working-directory: .
      run: |
        mkdir build
        
    - name: Run CMake and build webrtc-native-build
      working-directory: build
      run: |
        cmake ../ -DCMAKE_BUILD_TYPE=${{Â matrix.build-type}} -DCMAKE_BUILD_ARCHITECTURE=${{ matrix.architecture }}
        make -j2
        make install
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.generate_version_output.outputs.version }}
        release_name: opentera-webrtc-native-client-${{ steps.generate_version_output.outputs.version }}
        body: |
            Latest build of opentera-webrtc-native-client
            - This is a prerelease, use at your own risks.
        draft: true
        prerelease: true
     
    - name: Create Archive
      working-directory: dist/${{ matrix.build-type }}
      run : |
        tar cvzf ${{ steps.generate_release_file_name.outputs.release_file_name }}.tar.gz webrtc-native-build-${{ steps.generate_version_output.outputs.version }}
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/${{ matrix.build-type }}/${{ steps.generate_release_file_name.outputs.release_file_name }}.tar.gz
        asset_name: ${{ steps.generate_release_file_name.outputs.release_file_name }}.tar.gz
        asset_content_type: application/x-gzip   
        
        
        
        
        
        
